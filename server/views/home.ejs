<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Home</title>

    <link
        rel="stylesheet"
        href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css"
        integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh"
        crossorigin="anonymous"
    >
</head>
<body>
    <h2>Welcome</h2>

    <button id="link-account-btn">Link a Financial Institution</button>

    <p id="plaid-public-token"></p>
    <p id="plaid-access-token"></p>
    <p id="plaid-item-id"></p>

    <ul id="financial-institutions" class="nav nav-tabs">
        <!-- <li class="nav-item">
            <a class="nav-link active" href="#">Active</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="#">Link</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="#">Link</a>
        </li>
        <li class="nav-item">
            <a class="nav-link disabled" href="#" tabindex="-1" aria-disabled="true">Disabled</a>
        </li> -->
    </ul>

    <!-- <div id="financial-institutions"></div> -->

    <script src="https://cdn.plaid.com/link/v2/stable/link-initialize.js"></script>

    <!-- Utility Functions Declaration -->
    <script>
        const element = id => document.getElementById(id);
    </script>

    <!-- Plaid Link Client Initialization -->
    <script>
        // TODO: Consider dumping EJS and just using plain HTML and JavaScript.
        // We really are only using EJS to get some values needed by the Plaid Link Client.
        // We could just get via a GET request. It does not pose a security concern since,
        // after all, the server just replaces EJS placeholders with values and sends us
        // a resolved template, so it isn't like EJS is somehow hiding these values from
        // someone who might inspect the browser's developer tools.

        var plaidLinkClient = Plaid.create({
            apiVersion: 'v2',
            clientName: 'Personal Finance - Plaid Link Client',
            env: '<%= PLAID_ENV %>',
            product: '<%= PLAID_PRODUCTS %>'.split(','),
            key: '<%= PLAID_PUBLIC_KEY %>',
            countryCodes: '<%= PLAID_COUNTRY_CODES %>'.split(','),
            onSuccess: async function(publicToken) {
                element("plaid-public-token").innerText = `Public Token: ${publicToken}`;
                
                var rawResponse = await fetch("/api/get-access-token", {
                    method: "POST",
                    headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ publicToken })
                })
                
                var tokenExchangeResponse = await rawResponse.json();
                var { accessToken, itemId } = tokenExchangeResponse;
                
                element("plaid-access-token").innerText = `Access Token: ${accessToken}`;
                element("plaid-item-id").innerText = `Item Id: ${itemId}`;

                await renderFinancialInstitution();
            }
        });
    </script>

    <script>
        async function renderFinancialInstitution() {
            var rawResponse = await fetch("/api/item");
            var getItemResponse = await rawResponse.json();

            var newTab = Tab(getItemResponse.institution.id, getItemResponse.institution.name);
            
            newTab.childNodes[0].classList.add("active");
            element("financial-institutions").appendChild(newTab);
        }
    </script>

    <!-- Event Handlers Registration -->
    <script>
        element("link-account-btn").addEventListener("click", function() {
            plaidLinkClient.open();
        });
    </script>

    <script>
        function Tab(id, innerText) {
            let li = document.createElement("li");
            li.setAttribute("class", "nav-item");

            let anchor = document.createElement("a");
            anchor.setAttribute("class", "nav-link");
            anchor.setAttribute("id", id);
            anchor.innerText = innerText;

            li.appendChild(anchor);

            return li;
        }
    </script>
</body>
</html>